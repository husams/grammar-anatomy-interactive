<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="116" failures="3" errors="0" time="2.199">
  <testsuite name="ProgressService" errors="0" failures="0" skipped="0" timestamp="2025-06-25T19:45:49" time="0.317" tests="28">
    <testcase classname="ProgressService mergeModulesWithProgress merges modules with existing progress data" name="ProgressService mergeModulesWithProgress merges modules with existing progress data" time="0.001">
    </testcase>
    <testcase classname="ProgressService mergeModulesWithProgress creates default progress for modules without progress data" name="ProgressService mergeModulesWithProgress creates default progress for modules without progress data" time="0.001">
    </testcase>
    <testcase classname="ProgressService calculateEstimatedCompletion calculates remaining time correctly" name="ProgressService calculateEstimatedCompletion calculates remaining time correctly" time="0">
    </testcase>
    <testcase classname="ProgressService calculateEstimatedCompletion returns 0 for 100% completion" name="ProgressService calculateEstimatedCompletion returns 0 for 100% completion" time="0">
    </testcase>
    <testcase classname="ProgressService calculateEstimatedCompletion returns full duration for 0% completion" name="ProgressService calculateEstimatedCompletion returns full duration for 0% completion" time="0">
    </testcase>
    <testcase classname="ProgressService calculateModuleStatus returns not_started when no lessons completed" name="ProgressService calculateModuleStatus returns not_started when no lessons completed" time="0">
    </testcase>
    <testcase classname="ProgressService calculateModuleStatus returns completed when all lessons completed" name="ProgressService calculateModuleStatus returns completed when all lessons completed" time="0">
    </testcase>
    <testcase classname="ProgressService calculateModuleStatus returns in_progress for partial completion" name="ProgressService calculateModuleStatus returns in_progress for partial completion" time="0.001">
    </testcase>
    <testcase classname="ProgressService calculateProgressPercentage calculates percentage correctly" name="ProgressService calculateProgressPercentage calculates percentage correctly" time="0">
    </testcase>
    <testcase classname="ProgressService calculateProgressPercentage returns 0 for zero total lessons" name="ProgressService calculateProgressPercentage returns 0 for zero total lessons" time="0">
    </testcase>
    <testcase classname="ProgressService calculateProgressPercentage rounds to nearest integer" name="ProgressService calculateProgressPercentage rounds to nearest integer" time="0">
    </testcase>
    <testcase classname="ProgressService sortModulesWithProgress sorts by order ascending" name="ProgressService sortModulesWithProgress sorts by order ascending" time="0">
    </testcase>
    <testcase classname="ProgressService sortModulesWithProgress sorts by title descending" name="ProgressService sortModulesWithProgress sorts by title descending" time="0.006">
    </testcase>
    <testcase classname="ProgressService sortModulesWithProgress sorts by progress percentage" name="ProgressService sortModulesWithProgress sorts by progress percentage" time="0.001">
    </testcase>
    <testcase classname="ProgressService sortModulesWithProgress sorts by last accessed" name="ProgressService sortModulesWithProgress sorts by last accessed" time="0">
    </testcase>
    <testcase classname="ProgressService filterModules filters by search query" name="ProgressService filterModules filters by search query" time="0">
    </testcase>
    <testcase classname="ProgressService filterModules filters by status" name="ProgressService filterModules filters by status" time="0">
    </testcase>
    <testcase classname="ProgressService filterModules filters by both search and status" name="ProgressService filterModules filters by both search and status" time="0">
    </testcase>
    <testcase classname="ProgressService filterModules returns all modules when no filters applied" name="ProgressService filterModules returns all modules when no filters applied" time="0">
    </testcase>
    <testcase classname="ProgressService getOverallStats calculates overall statistics correctly" name="ProgressService getOverallStats calculates overall statistics correctly" time="0.001">
    </testcase>
    <testcase classname="ProgressService getOverallStats handles empty modules array" name="ProgressService getOverallStats handles empty modules array" time="0">
    </testcase>
    <testcase classname="ProgressService getNextRecommendedModule returns in progress module as recommendation" name="ProgressService getNextRecommendedModule returns in progress module as recommendation" time="0">
    </testcase>
    <testcase classname="ProgressService getNextRecommendedModule returns first not started module when no in progress modules" name="ProgressService getNextRecommendedModule returns first not started module when no in progress modules" time="0">
    </testcase>
    <testcase classname="ProgressService getNextRecommendedModule returns null when all modules are completed" name="ProgressService getNextRecommendedModule returns null when all modules are completed" time="0">
    </testcase>
    <testcase classname="ProgressService isModuleAvailable returns true for first module" name="ProgressService isModuleAvailable returns true for first module" time="0.002">
    </testcase>
    <testcase classname="ProgressService isModuleAvailable returns true when previous module is completed" name="ProgressService isModuleAvailable returns true when previous module is completed" time="0">
    </testcase>
    <testcase classname="ProgressService isModuleAvailable returns true when previous module is in progress" name="ProgressService isModuleAvailable returns true when previous module is in progress" time="0">
    </testcase>
    <testcase classname="ProgressService isModuleAvailable returns false when previous module is not started" name="ProgressService isModuleAvailable returns false when previous module is not started" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ModuleCard" errors="0" failures="0" skipped="0" timestamp="2025-06-25T19:45:49" time="0.499" tests="16">
    <testcase classname="ModuleCard renders module information correctly" name="ModuleCard renders module information correctly" time="0.018">
    </testcase>
    <testcase classname="ModuleCard displays progress information" name="ModuleCard displays progress information" time="0.003">
    </testcase>
    <testcase classname="ModuleCard shows correct status badge for in progress module" name="ModuleCard shows correct status badge for in progress module" time="0.006">
    </testcase>
    <testcase classname="ModuleCard shows correct status badge for completed module" name="ModuleCard shows correct status badge for completed module" time="0.004">
    </testcase>
    <testcase classname="ModuleCard shows correct status badge for not started module" name="ModuleCard shows correct status badge for not started module" time="0.006">
    </testcase>
    <testcase classname="ModuleCard displays difficulty badge when provided" name="ModuleCard displays difficulty badge when provided" time="0.006">
    </testcase>
    <testcase classname="ModuleCard shows correct action link text based on status" name="ModuleCard shows correct action link text based on status" time="0.011">
    </testcase>
    <testcase classname="ModuleCard calls onClick when card is clicked" name="ModuleCard calls onClick when card is clicked" time="0.016">
    </testcase>
    <testcase classname="ModuleCard calls onClick when Enter key is pressed" name="ModuleCard calls onClick when Enter key is pressed" time="0.003">
    </testcase>
    <testcase classname="ModuleCard calls onClick when Space key is pressed" name="ModuleCard calls onClick when Space key is pressed" time="0.003">
    </testcase>
    <testcase classname="ModuleCard has correct accessibility attributes" name="ModuleCard has correct accessibility attributes" time="0.007">
    </testcase>
    <testcase classname="ModuleCard renders progress bar with correct width" name="ModuleCard renders progress bar with correct width" time="0.006">
    </testcase>
    <testcase classname="ModuleCard shows recently accessed indicator when last_accessed is provided" name="ModuleCard shows recently accessed indicator when last_accessed is provided" time="0.002">
    </testcase>
    <testcase classname="ModuleCard does not show recently accessed indicator when last_accessed is not provided" name="ModuleCard does not show recently accessed indicator when last_accessed is not provided" time="0.002">
    </testcase>
    <testcase classname="ModuleCard renders without difficulty badge when not provided" name="ModuleCard renders without difficulty badge when not provided" time="0.001">
    </testcase>
    <testcase classname="ModuleCard does not show estimated completion time when it is 0" name="ModuleCard does not show estimated completion time when it is 0" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseFeedback" errors="0" failures="0" skipped="0" timestamp="2025-06-25T19:45:49" time="0.505" tests="15">
    <testcase classname="ExerciseFeedback displays correct feedback for correct answers" name="ExerciseFeedback displays correct feedback for correct answers" time="0.019">
    </testcase>
    <testcase classname="ExerciseFeedback displays incorrect feedback for wrong answers" name="ExerciseFeedback displays incorrect feedback for wrong answers" time="0.003">
    </testcase>
    <testcase classname="ExerciseFeedback shows hints when available" name="ExerciseFeedback shows hints when available" time="0.003">
    </testcase>
    <testcase classname="ExerciseFeedback shows try again button for incorrect answers" name="ExerciseFeedback shows try again button for incorrect answers" time="0.038">
    </testcase>
    <testcase classname="ExerciseFeedback shows continue button for correct answers when specified" name="ExerciseFeedback shows continue button for correct answers when specified" time="0.006">
    </testcase>
    <testcase classname="ExerciseFeedback does not show try again button for correct answers" name="ExerciseFeedback does not show try again button for correct answers" time="0.003">
    </testcase>
    <testcase classname="ExerciseFeedback applies correct styling for correct answers" name="ExerciseFeedback applies correct styling for correct answers" time="0.003">
    </testcase>
    <testcase classname="ExerciseFeedback applies correct styling for incorrect answers" name="ExerciseFeedback applies correct styling for incorrect answers" time="0.001">
    </testcase>
    <testcase classname="ExerciseFeedback displays correct icons for feedback state" name="ExerciseFeedback displays correct icons for feedback state" time="0.003">
    </testcase>
    <testcase classname="ExerciseFeedback handles missing explanation gracefully" name="ExerciseFeedback handles missing explanation gracefully" time="0.003">
    </testcase>
    <testcase classname="ExerciseFeedback handles missing hints gracefully" name="ExerciseFeedback handles missing hints gracefully" time="0.001">
    </testcase>
    <testcase classname="ExerciseFeedback handles empty hints array" name="ExerciseFeedback handles empty hints array" time="0.001">
    </testcase>
    <testcase classname="ExerciseFeedback renders multiple hints correctly" name="ExerciseFeedback renders multiple hints correctly" time="0.001">
    </testcase>
    <testcase classname="ExerciseFeedback shows appropriate button styling" name="ExerciseFeedback shows appropriate button styling" time="0.004">
    </testcase>
    <testcase classname="ExerciseFeedback maintains accessibility with proper ARIA attributes" name="ExerciseFeedback maintains accessibility with proper ARIA attributes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="FillInBlankExercise" errors="0" failures="0" skipped="0" timestamp="2025-06-25T19:45:49" time="0.524" tests="16">
    <testcase classname="FillInBlankExercise renders exercise prompt and text correctly" name="FillInBlankExercise renders exercise prompt and text correctly" time="0.02">
    </testcase>
    <testcase classname="FillInBlankExercise renders input fields for each blank" name="FillInBlankExercise renders input fields for each blank" time="0.005">
    </testcase>
    <testcase classname="FillInBlankExercise updates answer when user types in blanks" name="FillInBlankExercise updates answer when user types in blanks" time="0.01">
    </testcase>
    <testcase classname="FillInBlankExercise enables submit button only when all blanks are filled" name="FillInBlankExercise enables submit button only when all blanks are filled" time="0.033">
    </testcase>
    <testcase classname="FillInBlankExercise calls onSubmit with correct answers when submitted" name="FillInBlankExercise calls onSubmit with correct answers when submitted" time="0.007">
    </testcase>
    <testcase classname="FillInBlankExercise shows submitting state after submission" name="FillInBlankExercise shows submitting state after submission" time="0.006">
    </testcase>
    <testcase classname="FillInBlankExercise pre-fills blanks when userAnswer is provided" name="FillInBlankExercise pre-fills blanks when userAnswer is provided" time="0.002">
    </testcase>
    <testcase classname="FillInBlankExercise disables interaction when disabled prop is true" name="FillInBlankExercise disables interaction when disabled prop is true" time="0.001">
    </testcase>
    <testcase classname="FillInBlankExercise hides submit button when showResult is true" name="FillInBlankExercise hides submit button when showResult is true" time="0.001">
    </testcase>
    <testcase classname="FillInBlankExercise handles empty blanks array gracefully" name="FillInBlankExercise handles empty blanks array gracefully" time="0.004">
    </testcase>
    <testcase classname="FillInBlankExercise handles whitespace-only answers correctly" name="FillInBlankExercise handles whitespace-only answers correctly" time="0.01">
    </testcase>
    <testcase classname="FillInBlankExercise applies correct styling for input states" name="FillInBlankExercise applies correct styling for input states" time="0.005">
    </testcase>
    <testcase classname="FillInBlankExercise applies disabled styling when disabled" name="FillInBlankExercise applies disabled styling when disabled" time="0.007">
    </testcase>
    <testcase classname="FillInBlankExercise provides accessible labels for inputs" name="FillInBlankExercise provides accessible labels for inputs" time="0.005">
    </testcase>
    <testcase classname="FillInBlankExercise maintains input state during component re-renders" name="FillInBlankExercise maintains input state during component re-renders" time="0.003">
    </testcase>
    <testcase classname="FillInBlankExercise handles special characters in answers" name="FillInBlankExercise handles special characters in answers" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="MultipleChoiceExercise" errors="0" failures="0" skipped="0" timestamp="2025-06-25T19:45:49" time="0.53" tests="14">
    <testcase classname="MultipleChoiceExercise renders exercise prompt and options correctly" name="MultipleChoiceExercise renders exercise prompt and options correctly" time="0.02">
    </testcase>
    <testcase classname="MultipleChoiceExercise allows selecting an option" name="MultipleChoiceExercise allows selecting an option" time="0.011">
    </testcase>
    <testcase classname="MultipleChoiceExercise allows changing selection" name="MultipleChoiceExercise allows changing selection" time="0.01">
    </testcase>
    <testcase classname="MultipleChoiceExercise enables submit button when option is selected" name="MultipleChoiceExercise enables submit button when option is selected" time="0.032">
    </testcase>
    <testcase classname="MultipleChoiceExercise calls onSubmit with correct answer when submitted" name="MultipleChoiceExercise calls onSubmit with correct answer when submitted" time="0.008">
    </testcase>
    <testcase classname="MultipleChoiceExercise shows submitting state after submission" name="MultipleChoiceExercise shows submitting state after submission" time="0.005">
    </testcase>
    <testcase classname="MultipleChoiceExercise pre-selects option when userAnswer is provided" name="MultipleChoiceExercise pre-selects option when userAnswer is provided" time="0.002">
    </testcase>
    <testcase classname="MultipleChoiceExercise disables interaction when disabled prop is true" name="MultipleChoiceExercise disables interaction when disabled prop is true" time="0.007">
    </testcase>
    <testcase classname="MultipleChoiceExercise hides submit button when showResult is true" name="MultipleChoiceExercise hides submit button when showResult is true" time="0.002">
    </testcase>
    <testcase classname="MultipleChoiceExercise applies correct styling for selected options" name="MultipleChoiceExercise applies correct styling for selected options" time="0.003">
    </testcase>
    <testcase classname="MultipleChoiceExercise applies disabled styling when disabled" name="MultipleChoiceExercise applies disabled styling when disabled" time="0.016">
    </testcase>
    <testcase classname="MultipleChoiceExercise handles empty options gracefully" name="MultipleChoiceExercise handles empty options gracefully" time="0.002">
    </testcase>
    <testcase classname="MultipleChoiceExercise provides accessible labels and roles" name="MultipleChoiceExercise provides accessible labels and roles" time="0.008">
    </testcase>
    <testcase classname="MultipleChoiceExercise maintains focus management for keyboard navigation" name="MultipleChoiceExercise maintains focus management for keyboard navigation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ModuleSearch" errors="0" failures="0" skipped="0" timestamp="2025-06-25T19:45:49" time="0.535" tests="17">
    <testcase classname="ModuleSearch renders with correct initial value" name="ModuleSearch renders with correct initial value" time="0.039">
    </testcase>
    <testcase classname="ModuleSearch renders with correct placeholder" name="ModuleSearch renders with correct placeholder" time="0.007">
    </testcase>
    <testcase classname="ModuleSearch shows search icon initially" name="ModuleSearch shows search icon initially" time="0.005">
    </testcase>
    <testcase classname="ModuleSearch updates local value immediately on input change" name="ModuleSearch updates local value immediately on input change" time="0.014">
    </testcase>
    <testcase classname="ModuleSearch calls onChange after debounce delay" name="ModuleSearch calls onChange after debounce delay" time="0.01">
    </testcase>
    <testcase classname="ModuleSearch shows loading spinner during search" name="ModuleSearch shows loading spinner during search" time="0.008">
    </testcase>
    <testcase classname="ModuleSearch shows clear button when there is input" name="ModuleSearch shows clear button when there is input" time="0.003">
    </testcase>
    <testcase classname="ModuleSearch does not show clear button when input is empty" name="ModuleSearch does not show clear button when input is empty" time="0.001">
    </testcase>
    <testcase classname="ModuleSearch clears input when clear button is clicked" name="ModuleSearch clears input when clear button is clicked" time="0.003">
    </testcase>
    <testcase classname="ModuleSearch clears input when Escape key is pressed" name="ModuleSearch clears input when Escape key is pressed" time="0.007">
    </testcase>
    <testcase classname="ModuleSearch cancels previous debounced calls when new input is typed" name="ModuleSearch cancels previous debounced calls when new input is typed" time="0.012">
    </testcase>
    <testcase classname="ModuleSearch is disabled when disabled prop is true" name="ModuleSearch is disabled when disabled prop is true" time="0.003">
    </testcase>
    <testcase classname="ModuleSearch updates when value prop changes externally" name="ModuleSearch updates when value prop changes externally" time="0.007">
    </testcase>
    <testcase classname="ModuleSearch shows search hint text when there is input" name="ModuleSearch shows search hint text when there is input" time="0.002">
    </testcase>
    <testcase classname="ModuleSearch has correct accessibility attributes" name="ModuleSearch has correct accessibility attributes" time="0.003">
    </testcase>
    <testcase classname="ModuleSearch applies custom className" name="ModuleSearch applies custom className" time="0.003">
    </testcase>
    <testcase classname="ModuleSearch uses custom debounce time" name="ModuleSearch uses custom debounce time" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ExercisePage" errors="0" failures="3" skipped="0" timestamp="2025-06-25T19:45:49" time="1.657" tests="10">
    <testcase classname="ExercisePage loads and displays exercise correctly" name="ExercisePage loads and displays exercise correctly" time="0.025">
      <failure>TestingLibraryElementError: Unable to find an element with the text: /loading/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div&gt;
      &lt;div
        class=&quot;min-h-screen bg-gray-50 py-8&quot;
      &gt;
        &lt;div
          class=&quot;max-w-4xl mx-auto px-4 sm:px-6 lg:px-8&quot;
        &gt;
          &lt;div
            class=&quot;bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden&quot;
          &gt;
            &lt;div
              class=&quot;border-b border-gray-200 px-6 py-4&quot;
            &gt;
              &lt;div
                class=&quot;animate-pulse&quot;
              &gt;
                &lt;div
                  class=&quot;h-6 bg-gray-200 rounded w-1/3 mb-2&quot;
                /&gt;
                &lt;div
                  class=&quot;h-4 bg-gray-200 rounded w-2/3&quot;
                /&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div
              class=&quot;exercise-content&quot;
            /&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
    at Object.getElementError (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/config.js:37:19)
    at /Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
    at /Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
    at getByText (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
    at Object.&lt;anonymous&gt; (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/src/components/exercises/__tests__/ExercisePage.test.tsx:66:19)
    at Promise.then.completed (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/jest-runner/build/testWorker.js:133:12)</failure>
    </testcase>
    <testcase classname="ExercisePage handles authentication errors by redirecting to login" name="ExercisePage handles authentication errors by redirecting to login" time="0.061">
    </testcase>
    <testcase classname="ExercisePage handles 404 errors gracefully" name="ExercisePage handles 404 errors gracefully" time="0.008">
    </testcase>
    <testcase classname="ExercisePage handles network errors gracefully" name="ExercisePage handles network errors gracefully" time="0.008">
    </testcase>
    <testcase classname="ExercisePage submits exercise answer successfully" name="ExercisePage submits exercise answer successfully" time="0.043">
    </testcase>
    <testcase classname="ExercisePage handles submission errors gracefully" name="ExercisePage handles submission errors gracefully" time="0.022">
    </testcase>
    <testcase classname="ExercisePage allows retrying incorrect answers" name="ExercisePage allows retrying incorrect answers" time="1.018">
      <failure>Error: Unable to find an element with the text: Not quite right. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div&gt;
      &lt;div
        class=&quot;min-h-screen bg-gray-50 py-8&quot;
      &gt;
        &lt;div
          class=&quot;max-w-4xl mx-auto px-4 sm:px-6 lg:px-8&quot;
        &gt;
          &lt;div
            class=&quot;bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden&quot;
          &gt;
            &lt;div
              class=&quot;border-b border-gray-200 px-6 py-4&quot;
            &gt;
              &lt;div
                class=&quot;flex justify-between items-start&quot;
              &gt;
                &lt;div&gt;
                  &lt;h1
                    class=&quot;text-2xl font-bold text-gray-900 mb-2&quot;
                  &gt;
                    Test Multiple Choice Exercise
                  &lt;/h1&gt;
                  &lt;p
                    class=&quot;text-gray-600 mb-4&quot;
                  &gt;
                    Which of the following is a noun?
                  &lt;/p&gt;
                  &lt;div
                    class=&quot;flex items-center space-x-4 text-sm text-gray-500&quot;
                  &gt;
                    &lt;span
                      class=&quot;inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 capitalize&quot;
                    &gt;
                      multiple choice
                    &lt;/span&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div
              class=&quot;exercise-content&quot;
            &gt;
              &lt;div
                class=&quot;px-6 py-8&quot;
              &gt;
                &lt;div
                  class=&quot;mb-6&quot;
                &gt;
                  &lt;h2
                    class=&quot;text-xl font-semibold text-gray-900 mb-4&quot;
                  &gt;
                    Which of the following is a noun?
                  &lt;/h2&gt;
                &lt;/div&gt;
                &lt;div
                  class=&quot;space-y-3 mb-8&quot;
                &gt;
                  &lt;label
                    class=&quot;flex items-center p-4 border-2 rounded-lg cursor-pointer transition-all border-blue-500 bg-blue-50 &quot;
                  &gt;
                    &lt;input
                      class=&quot;w-4 h-4 text-blue-600 border-gray-300 focus:ring-blue-500&quot;
                      name=&quot;multiple-choice&quot;
                      type=&quot;radio&quot;
                      value=&quot;0&quot;
                    /&gt;
                    &lt;span
                      class=&quot;ml-3 text-gray-900&quot;
                    &gt;
                      Run
                    &lt;/span&gt;
                  &lt;/label&gt;
                  &lt;label
                    class=&quot;flex items-center p-4 border-2 rounded-lg cursor-pointer transition-all border-gray-200 hover:border-gray-300 &quot;
                  &gt;
                    &lt;input
                      class=&quot;w-4 h-4 text-blue-600 border-gray-300 focus:ring-blue-500&quot;
                      name=&quot;multiple-choice&quot;
                      type=&quot;radio&quot;
                      value=&quot;1&quot;
                    /&gt;
                    &lt;span
                      class=&quot;ml-3 text-gray-900&quot;
                    &gt;
                      Cat
                    &lt;/span&gt;
                  &lt;/label&gt;
                  &lt;label
                    class=&quot;flex items-center p-4 border-2 rounded-lg cursor-pointer transition-all border-gray-200 hover:border-gray-300 &quot;
                  &gt;
                    &lt;input
                      class=&quot;w-4 h-4 text-blue-600 border-gray-300 focus:ring-blue-500&quot;
                      name=&quot;multiple-choice&quot;
                      type=&quot;radio&quot;
                      value=&quot;2&quot;
                    /&gt;
                    &lt;span
                      class=&quot;ml-3 text-gray-900&quot;
                    &gt;
                      Quick
                    &lt;/span&gt;
                  &lt;/label&gt;
                  &lt;label
                    class=&quot;flex items-center p-4 border-2 rounded-lg cursor-pointer transition-all border-gray-200 hover:border-gray-300 &quot;
                  &gt;
                    &lt;input
                      class=&quot;w-4 h-4 text-blue-600 border-gray-300 focus:ring-blue-500&quot;
                      name=&quot;multiple-choice&quot;
                      type=&quot;radio&quot;
                      value=&quot;3&quot;
                    /&gt;
                    &lt;span
                      class=&quot;ml-3 text-gray-900&quot;
                    &gt;
                      Blue
                    &lt;/span&gt;
                  &lt;/label&gt;
                &lt;/div&gt;
                &lt;div
                  class=&quot;flex justify-end&quot;
                &gt;
                  &lt;button
                    class=&quot;px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed&quot;
                    disabled=&quot;&quot;
                  &gt;
                    Submit Answer
                  &lt;/button&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div
              class=&quot;border-t border-gray-200 px-6 py-4&quot;
            &gt;
              &lt;div
                class=&quot;flex justify-between items-center&quot;
              &gt;
                &lt;button
                  class=&quot;inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500&quot;
                &gt;
                  &lt;svg
                    class=&quot;w-4 h-4 mr-2&quot;
                    fill=&quot;currentColor&quot;
                    viewBox=&quot;0 0 20 20&quot;
                  &gt;
                    &lt;path
                      clip-rule=&quot;evenodd&quot;
                      d=&quot;M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z&quot;
                      fill-rule=&quot;evenodd&quot;
                    /&gt;
                  &lt;/svg&gt;
                  Previous
                &lt;/button&gt;
                &lt;span
                  class=&quot;text-sm text-gray-600&quot;
                &gt;
                  Exercise 
                  1
                &lt;/span&gt;
                &lt;button
                  class=&quot;inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500&quot;
                &gt;
                  Next
                  &lt;svg
                    class=&quot;w-4 h-4 ml-2&quot;
                    fill=&quot;currentColor&quot;
                    viewBox=&quot;0 0 20 20&quot;
                  &gt;
                    &lt;path
                      clip-rule=&quot;evenodd&quot;
                      d=&quot;M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z&quot;
                      fill-rule=&quot;evenodd&quot;
                    /&gt;
                  &lt;/svg&gt;
                &lt;/button&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
    at waitForWrapper (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
    at Object.&lt;anonymous&gt; (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/src/components/exercises/__tests__/ExercisePage.test.tsx:259:18)</failure>
    </testcase>
    <testcase classname="ExercisePage tracks attempt count correctly" name="ExercisePage tracks attempt count correctly" time="0.013">
    </testcase>
    <testcase classname="ExercisePage prevents submission without selecting an answer" name="ExercisePage prevents submission without selecting an answer" time="0.021">
    </testcase>
    <testcase classname="ExercisePage renders different exercise types correctly" name="ExercisePage renders different exercise types correctly" time="0.007">
      <failure>TestingLibraryElementError: Found multiple elements with the text: Complete the sentence

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;p
  class=&quot;text-gray-600 mb-4&quot;
&gt;
  Complete the sentence
&lt;/p&gt;

Ignored nodes: comments, script, style
&lt;h2
  class=&quot;text-xl font-semibold text-gray-900 mb-4&quot;
&gt;
  Complete the sentence
&lt;/h2&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div&gt;
      &lt;div
        class=&quot;min-h-screen bg-gray-50 py-8&quot;
      &gt;
        &lt;div
          class=&quot;max-w-4xl mx-auto px-4 sm:px-6 lg:px-8&quot;
        &gt;
          &lt;div
            class=&quot;bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden&quot;
          &gt;
            &lt;div
              class=&quot;border-b border-gray-200 px-6 py-4&quot;
            &gt;
              &lt;div
                class=&quot;flex justify-between items-start&quot;
              &gt;
                &lt;div&gt;
                  &lt;h1
                    class=&quot;text-2xl font-bold text-gray-900 mb-2&quot;
                  &gt;
                    Fill in the Blank Exercise
                  &lt;/h1&gt;
                  &lt;p
                    class=&quot;text-gray-600 mb-4&quot;
                  &gt;
                    Complete the sentence
                  &lt;/p&gt;
                  &lt;div
                    class=&quot;flex items-center space-x-4 text-sm text-gray-500&quot;
                  &gt;
                    &lt;span
                      class=&quot;inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 capitalize&quot;
                    &gt;
                      fill in_blank
                    &lt;/span&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div
              class=&quot;exercise-content&quot;
            &gt;
              &lt;div
                class=&quot;px-6 py-8&quot;
              &gt;
                &lt;div
                  class=&quot;mb-6&quot;
                &gt;
                  &lt;h2
                    class=&quot;text-xl font-semibold text-gray-900 mb-4&quot;
                  &gt;
                    Complete the sentence
                  &lt;/h2&gt;
                &lt;/div&gt;
                &lt;div
                  class=&quot;mb-8&quot;
                &gt;
                  &lt;div
                    class=&quot;text-lg leading-relaxed&quot;
                  &gt;
                    &lt;p
                      class=&quot;mb-4&quot;
                    &gt;
                      The cat ____ on the mat.
                    &lt;/p&gt;
                    &lt;div
                      class=&quot;space-y-4&quot;
                    &gt;
                      &lt;div
                        class=&quot;flex items-center space-x-2&quot;
                      &gt;
                        &lt;span
                          class=&quot;text-gray-600&quot;
                        &gt;
                          Blank 
                          1
                          :
                        &lt;/span&gt;
                        &lt;input
                          class=&quot;px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:opacity-60&quot;
                          placeholder=&quot;Type your answer here...&quot;
                          type=&quot;text&quot;
                          value=&quot;&quot;
                        /&gt;
                      &lt;/div&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div
                  class=&quot;flex justify-end&quot;
                &gt;
                  &lt;button
                    class=&quot;px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed&quot;
                    disabled=&quot;&quot;
                  &gt;
                    Submit Answer
                  &lt;/button&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div
              class=&quot;border-t border-gray-200 px-6 py-4&quot;
            &gt;
              &lt;div
                class=&quot;flex justify-between items-center&quot;
              &gt;
                &lt;button
                  class=&quot;inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500&quot;
                &gt;
                  &lt;svg
                    class=&quot;w-4 h-4 mr-2&quot;
                    fill=&quot;currentColor&quot;
                    viewBox=&quot;0 0 20 20&quot;
                  &gt;
                    &lt;path
                      clip-rule=&quot;evenodd&quot;
                      d=&quot;M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z&quot;
                      fill-rule=&quot;evenodd&quot;
                    /&gt;
                  &lt;/svg&gt;
                  Previous
                &lt;/button&gt;
                &lt;span
                  class=&quot;text-sm text-gray-600&quot;
                &gt;
                  Exercise 
                  1
                &lt;/span&gt;
                &lt;button
                  class=&quot;inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500&quot;
                &gt;
                  Next
                  &lt;svg
                    class=&quot;w-4 h-4 ml-2&quot;
                    fill=&quot;currentColor&quot;
                    viewBox=&quot;0 0 20 20&quot;
                  &gt;
                    &lt;path
                      clip-rule=&quot;evenodd&quot;
                      d=&quot;M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z&quot;
                      fill-rule=&quot;evenodd&quot;
                    /&gt;
                  &lt;/svg&gt;
                &lt;/button&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
    at Object.getElementError (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/config.js:37:19)
    at getElementError (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
    at getMultipleElementsFoundError (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
    at /Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
    at getByText (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
    at Object.&lt;anonymous&gt; (/Users/husam/workspace/tutor/grammar-anatomy-app/frontend/src/components/exercises/__tests__/ExercisePage.test.tsx:354:19)</failure>
    </testcase>
  </testsuite>
</testsuites>